import vkquick as vq
import typing , pyqiwi

from src.config import complete_sticker, error_sticker
from src.filters.error_handler import ErrorHandler
from src.misc import app
from src.database.base import location

try:
    wallet = pyqiwi.Wallet(token=location.qiwi_key)
except:
    pass

@app.command("–ø–µ—Ä–µ–≤–æ–¥")
async def create_pay(number: str, sum: typing.Union[float, int] ,* , comment: str):
    wallet.qiwi_transfer(account=number,amount=sum,comment=comment)
    return f"vqlp | {complete_sticker} –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ QIWI –ö–æ—à–µ–ª—ë–∫ —Å –Ω–æ–º–µ—Ä–æ–º {number} –≤—ã–ø–æ–ª–Ω–µ–Ω.\nü¶ã –°—É–º–º–∞ —Å–ø–∏—Å–∞–Ω–∏—è: {sum}‚ÇΩ\n‚úâ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–µ—Ä–µ–≤–æ–¥—É: {comment}"


@app.command("–æ–ø–ª–∞—Ç–∞")
async def pay_mobile(ctx: vq.NewMessage , number: str , sum: typing.Union[float, int]):
    try:
        wallet.mobile(account=number,amount=sum)
        await ctx.edit( f"‚ú® vqlp | {complete_sticker} –ü–ª–∞—Ç–µ–∂ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ –Ω–æ–º–µ—Ä {number} –±—ã–ª–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–æ {sum} —Ä—É–±–ª–µ–πüí∞")
    except ValueError:
        await ctx.edit( f"‚ú® vqlp | {error_sticker} –£–∫–∞–∑–∞–Ω –Ω–µ –≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ : {number}")

@app.command("–±–∞–ª–∞–Ω—Å")
async def qbalance_wrapper(ctx: vq.NewMessage):
        await ctx.edit( f"‚ú® vqlp | üíµ –ë–∞–ª–∞–Ω—Å –≤–∞—à–µ–≥–æ Qiwi –∫–æ—à–µ–ª—å–∫–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {wallet.balance()}‚ÇΩ." )