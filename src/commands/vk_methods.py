import vkquick as vq
import typing

from src.config import complete_sticker, error_sticker
from src.filters.error_handler import ErrorHandler
from src.misc import app
from src.database.base import location


@app.command("+–¥—Ä", invalid_argument_config=ErrorHandler())
async def friend_add(ctx: vq.NewMessage, user: vq.User):
    try:
        method = await ctx.api.friends.add(user_id=user.id)
        await ctx.edit(f"{complete_sticker} –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ...")
        if method == 1:
            await ctx.edit(f"{complete_sticker} –ó–∞—è–≤–∫–∞ –≤ –¥—Ä—É–∑—å—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user:@[fullname]} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
        elif method == 2:
            await ctx.edit(f"{complete_sticker} –ó–∞—è–≤–∫–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä—É–∑—å—è –æ—Ç {user:@[fullname} –æ–¥–æ–±—Ä–µ–Ω–∞.")
        elif method == 4:
            await ctx.edit(f"{error_sticker} –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏.")
    except vq.APIError[vq.CODE_174_FRIENDS_ADD_YOURSELF]:
        await ctx.edit(f"{error_sticker} –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –¥—Ä—É–∑—å—è —Å–∞–º–æ–≥–æ —Å–µ–±—è.")


@app.command("-–¥—Ä", invalid_argument_config=ErrorHandler())
async def friend_delete(ctx: vq.NewMessage, user: vq.User):
    method = await ctx.api.friends.delete(user_id=user.id)
    await ctx.edit(f"{complete_sticker} –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ...")
    if method['success']:
        await ctx.edit(f"{complete_sticker} {user:@[fullname]} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π.")
    elif method['out_request_deleted']:
        await ctx.edit(f"{complete_sticker} –û—Ç–º–µ–Ω–µ–Ω–∞ –∏—Å—Ö–æ–¥—è—â–∞—è –∑–∞—è–≤–∫–∞ –≤ –¥—Ä—É–∑—å—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user:@[fullname]}")
    elif method['in_request_deleted']:
        await ctx.edit(f"{complete_sticker} –û—Ç–∫–ª–æ–Ω–µ–Ω–∞ –≤—Ö–æ–¥—è—â–∞—è –∑–∞—è–≤–∫–∞ –≤ –¥—Ä—É–∑—å—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user:@[fullname]}")


@app.command("–∏–¥", invalid_argument_config=ErrorHandler())
async def revolve_user(ctx: vq.NewMessage, user: vq.User):
    await ctx.edit(f"{complete_sticker} –ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.fullname}: [id{user.id}|{user.id}]")


@app.command("–≤–ª—Å", invalid_argument_config=ErrorHandler())
async def send_message(ctx: vq.NewMessage, user: vq.User, *, text: str):
    await ctx.api.messages.send(
        user_id=user.id,
        random_id=0,
        message=text
    )
    await ctx.edit(f"{complete_sticker} –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é : {user:@[fullname]}")


@app.command("+–ª–∞–π–∫", invalid_argument_config=ErrorHandler())
async def likes_add(ctx: vq.NewMessage, user: vq.User[typing.Literal["photo_id"]]):
    photo_id = user.fields["photo_id"].split("_")[1]
    count_likes = await ctx.api.likes.add(type='photo', owner_id=user.id, item_id=photo_id)
    await ctx.edit(
        f"{complete_sticker} –õ–∞–π–∫ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user:@[fullname]} –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n"
        f"‚ö† –°—Ç–∞–ª–æ –ª–∞–π–∫–æ–≤: {count_likes['likes']}")


@app.command("-–ª–∞–π–∫", invalid_argument_config=ErrorHandler())
async def likes_delete(ctx: vq.NewMessage, user: vq.User[typing.Literal["photo_id"]]):
    photo_id = user.fields["photo_id"].split("_")[1]
    count_likes = await ctx.api.likes.delete(type='photo', owner_id=user.id, item_id=photo_id)
    await ctx.edit(
        f"{complete_sticker} –õ–∞–π–∫ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user:@[fullname]} —É–±—Ä–∞–Ω!\n"
        f"‚ö† –°—Ç–∞–ª–æ –ª–∞–π–∫–æ–≤: {count_likes['likes']}")


@app.command("–¥–∏–∞–ª–æ–≥–∏", invalid_argument_config=ErrorHandler())
async def dialog_get(ctx: vq.NewMessage):
    dialogs = await ctx.api.messages.getConversations()
    await ctx.edit(f"{complete_sticker} –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤: {dialogs['count']}")


@app.command("—á–∞—Ç", invalid_argument_config=ErrorHandler())
async def get_chat(ctx: vq.NewMessage):
    chat = await ctx.api.messages.getChat(chat_id=ctx.msg.chat_id)
    await ctx.edit(f"‚öô –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ\n"
                   f"üí° –ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ : {chat['title']}\n"
                   f"{complete_sticker} –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ : {chat['members_count']}\n"
                   f"‚ö† –ê–π–¥–∏ —á–∞—Ç–∞ : {chat['id']}")
