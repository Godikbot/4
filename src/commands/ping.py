import time, psutil
import typing as ty

import vkquick as vq

from src.filters.error_handler import ErrorHandler
from src.filters.only_me import OnlyMe
from src.misc import app


@app.command("–ø–∏–Ω–≥ –ø–æ–¥—Ä–æ–±–Ω–æ", invalid_argument_config=ErrorHandler(), filter=OnlyMe())
async def pinged(ctx: vq.NewMessage) -> ty.Optional[str]:
    delta = round(time.time() - ctx.msg.date.timestamp(), 4)
    return (f"‚ú® vqlp | –û—Ç–≤–µ—Ç –∑–∞ ‚ûô {delta} —Å–µ–∫.\n"
            f"‚öô –ó–∞–Ω—è—Ç–æ—Å—Ç—å –û–ó–£ : {round(psutil.virtual_memory()[3] / 2. ** 30, 2)}GB –∏–∑ {round(psutil.virtual_memory()[0] / 2. ** 30, 2)}GB\n"
            f" üìà –ó–∞–Ω—è—Ç–æ—Å—Ç—å –¶–ü–£ {round(psutil.cpu_percent())} %\n "
            f"üìÄ –î–∏—Å–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ {(psutil.disk_usage('/')[3])}%")


@app.command("–ø–∏–Ω–≥", invalid_argument_config=ErrorHandler(), filter=OnlyMe())
async def pinged(ctx: vq.NewMessage) -> ty.Optional[str]:
    delta = round(time.time() - ctx.msg.date.timestamp(), 4)
    return (f"‚ú® vqlp | –û—Ç–≤–µ—Ç –∑–∞ ‚ûô {delta if delta > 0 else 0.1} —Å–µ–∫.")
